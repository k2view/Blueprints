{{ $namespace := default dict .Values.namespace }}
{{ $affinity := default dict .Values.affinity -}}
{{ $repoSecret := default dict .Values.container.image.repoSecret -}}
{{ $resource_allocation := default dict .Values.container.resource_allocation}}
{{ $limits := default dict $resource_allocation.limits}}
{{ $requests := default dict $resource_allocation.requests}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}-deployment
  namespace: {{ default .Release.Name $namespace.name }}
  labels: &id001
    app: {{ .Values.app_name }}
    {{- range $label := .Values.labels }}
    {{ $label.name }}: {{ $label.value }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app_name }}
  template:
    metadata:
      labels: *id001
    spec:
      {{- if $repoSecret.enabled }}
      imagePullSecrets:
        - name: {{ $repoSecret.name }}
      {{- end }}
      {{- if or (eq $affinity.type "affinity") (eq $affinity.type "anti-affinity") }}
      affinity:
        {{- if eq $affinity.type "affinity" }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $affinity.label.name }}
                operator: In
                values:
                - {{ $affinity.label.value }}
        {{- else if eq $affinity.type "anti-affinity" }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $affinity.label.name }}
                operator: NotIn
                values:
                - {{ $affinity.label.value }}
        {{- end }}
      {{- end }}
      containers:
      - name: {{ .Values.app_name }}
        image: {{ .Values.container.image.url }}
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: {{ .Values.service.port }}
        resources:
          limits:
            memory: {{ default "4Gi" $limits.memory }}
            cpu: {{ default "1" $limits.cpu }}
          requests:
            memory: {{ default "4Gi" $requests.memory }}
            cpu: {{ default "0.5" $requests.cpu }}
        env:
        {{- range .Values.secrets }}
        - name: {{ .key }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.app_name }}-secrets
              key: {{ .key }}
        {{- end }}
        volumeMounts:
          - name: {{ .Values.app_name }}-storage
            mountPath: {{ .Values.container.storage_path }}
      volumes:
      - name: {{ .Values.app_name }}-storage
        persistentVolumeClaim:
          claimName: {{ .Values.app_name }}-claim
